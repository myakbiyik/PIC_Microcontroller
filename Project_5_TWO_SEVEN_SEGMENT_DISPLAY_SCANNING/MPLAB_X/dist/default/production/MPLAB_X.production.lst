

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Aug 06 00:44:56 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x4E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F84A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  0081                     	;# 
    64  0085                     	;# 
    65  0086                     	;# 
    66  0088                     	;# 
    67  0089                     	;# 
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84                           
    85                           	psect	idataBANK0
    86  038B                     __pidataBANK0:
    87                           
    88                           ;initializer for _segment
    89  038B  343F               	retlw	63
    90  038C  3406               	retlw	6
    91  038D  345B               	retlw	91
    92  038E  344F               	retlw	79
    93  038F  3466               	retlw	102
    94  0390  346D               	retlw	109
    95  0391  347C               	retlw	124
    96  0392  3407               	retlw	7
    97  0393  347F               	retlw	127
    98  0394  346F               	retlw	111
    99                           
   100                           	psect	nvBANK0
   101  001C                     __pnvBANK0:
   102  001C                     _k:
   103  001C                     	ds	1
   104  0006                     _PORTB	set	6
   105  0029                     _RA1	set	41
   106  0028                     _RA0	set	40
   107  0085                     _TRISA	set	133
   108  0086                     _TRISB	set	134
   109                           
   110                           	psect	cinit
   111  03E7                     start_initialization:	
   112                           ; #config settings
   113                           
   114  03E7                     __initialization:
   115                           
   116                           ; Initialize objects allocated to BANK0
   117  03E7  238B               	fcall	__pidataBANK0	;fetch initializer
   118  03E8  008C               	movwf	__pdataBANK0& (0+127)
   119  03E9  238C               	fcall	__pidataBANK0+1	;fetch initializer
   120  03EA  008D               	movwf	(__pdataBANK0+1)& (0+127)
   121  03EB  238D               	fcall	__pidataBANK0+2	;fetch initializer
   122  03EC  008E               	movwf	(__pdataBANK0+2)& (0+127)
   123  03ED  238E               	fcall	__pidataBANK0+3	;fetch initializer
   124  03EE  008F               	movwf	(__pdataBANK0+3)& (0+127)
   125  03EF  238F               	fcall	__pidataBANK0+4	;fetch initializer
   126  03F0  0090               	movwf	(__pdataBANK0+4)& (0+127)
   127  03F1  2390               	fcall	__pidataBANK0+5	;fetch initializer
   128  03F2  0091               	movwf	(__pdataBANK0+5)& (0+127)
   129  03F3  2391               	fcall	__pidataBANK0+6	;fetch initializer
   130  03F4  0092               	movwf	(__pdataBANK0+6)& (0+127)
   131  03F5  2392               	fcall	__pidataBANK0+7	;fetch initializer
   132  03F6  0093               	movwf	(__pdataBANK0+7)& (0+127)
   133  03F7  2393               	fcall	__pidataBANK0+8	;fetch initializer
   134  03F8  0094               	movwf	(__pdataBANK0+8)& (0+127)
   135  03F9  2394               	fcall	__pidataBANK0+9	;fetch initializer
   136  03FA  0095               	movwf	(__pdataBANK0+9)& (0+127)
   137                           
   138                           ; Clear objects allocated to BANK0
   139  03FB  0196               	clrf	__pbssBANK0& (0+127)
   140  03FC  0197               	clrf	(__pbssBANK0+1)& (0+127)
   141  03FD  0198               	clrf	(__pbssBANK0+2)& (0+127)
   142  03FE                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145  03FE                     __end_of__initialization:
   146  03FE  0183               	clrf	3
   147  03FF  2B95               	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	bssBANK0
   150  0016                     __pbssBANK0:
   151  0016                     _time:
   152  0016                     	ds	2
   153  0018                     _i:
   154  0018                     	ds	1
   155                           
   156                           	psect	dataBANK0
   157  000C                     __pdataBANK0:
   158  000C                     _segment:
   159  000C                     	ds	10
   160                           
   161                           	psect	cstackCOMMON
   162  0000                     __pcstackCOMMON:
   163  0000                     ??_scanningFunc:
   164                           
   165                           	psect	cstackBANK0
   166  0019                     __pcstackBANK0:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0019                     ?_scanningFunc:
   170  0019                     ?_main:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0019                     scanningFunc@m:	
   174                           ; 1 bytes @ 0x0
   175                           
   176                           
   177                           ; 2 bytes @ 0x0
   178  0019                     	ds	2
   179  001B                     ??_main:
   180                           
   181                           ; 1 bytes @ 0x2
   182  001B                     	ds	1
   183                           
   184                           	psect	maintext
   185  0395                     __pmaintext:	
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   188 ;;
   189 ;; *************** function _main *****************
   190 ;; Defined at:
   191 ;;		line 19 in file "main.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : B00/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMMON   BANK0
   205 ;;      Params:         0       0
   206 ;;      Locals:         0       0
   207 ;;      Temps:          0       1
   208 ;;      Totals:         0       1
   209 ;;Total ram usage:        1 bytes
   210 ;; Hardware stack levels required when called: 1
   211 ;; This function calls:
   212 ;;		_scanningFunc
   213 ;; This function is called by:
   214 ;;		Startup code after reset
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218  0395                     _main:	
   219                           ;psect for function _main
   220                           
   221  0395                     l697:	
   222                           ;incstack = 0
   223                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   224                           
   225                           
   226                           ;main.c: 21:                 scanningFunc();
   227  0395  1683               	bsf	3,5	;RP0=1, select bank1
   228  0396  0186               	clrf	6	;volatile
   229                           
   230                           ;main.c: 22:             }
   231  0397  0185               	clrf	5	;volatile
   232  0398                     l25:	
   233                           ;main.c: 24: 
   234                           
   235                           
   236                           ;main.c: 25:         i=0;;main.c: 26:         k=0;
   237  0398  1283               	bcf	3,5	;RP0=0, select bank0
   238  0399  019C               	clrf	_k
   239  039A                     l699:
   240  039A  300A               	movlw	10
   241  039B  021C               	subwf	_k,w
   242  039C  1C03               	skipc
   243  039D  2B9F               	goto	u71
   244  039E  2BA0               	goto	u70
   245  039F                     u71:
   246  039F  2BA1               	goto	l703
   247  03A0                     u70:
   248  03A0  2BB5               	goto	l719
   249  03A1                     l703:
   250                           
   251                           ;main.c: 27: ;main.c: 28:     return;
   252  03A1  0198               	clrf	_i
   253  03A2                     l705:
   254  03A2  300A               	movlw	10
   255  03A3  0218               	subwf	_i,w
   256  03A4  1C03               	skipc
   257  03A5  2BA7               	goto	u81
   258  03A6  2BA8               	goto	u80
   259  03A7                     u81:
   260  03A7  2BA9               	goto	l709
   261  03A8                     u80:
   262  03A8  2BB0               	goto	l715
   263  03A9                     l709:
   264                           
   265                           ;main.c: 29:     };main.c: 30: }
   266  03A9  23B8               	fcall	_scanningFunc
   267  03AA                     l711:
   268                           
   269                           ;main.c: 31: 
   270  03AA  3001               	movlw	1
   271  03AB  1283               	bcf	3,5	;RP0=0, select bank0
   272  03AC  009B               	movwf	??_main
   273  03AD  081B               	movf	??_main,w
   274  03AE  0798               	addwf	_i,f
   275  03AF  2BA2               	goto	l705
   276  03B0                     l715:
   277                           
   278                           ;main.c: 32: 
   279  03B0  3001               	movlw	1
   280  03B1  009B               	movwf	??_main
   281  03B2  081B               	movf	??_main,w
   282  03B3  079C               	addwf	_k,f
   283  03B4  2B9A               	goto	l699
   284  03B5                     l719:
   285                           
   286                           ;main.c: 34: 
   287  03B5  0198               	clrf	_i
   288                           
   289                           ;main.c: 35: 
   290  03B6  019C               	clrf	_k
   291  03B7                     l30:
   292  03B7  2800               	ljmp	start
   293  03B8                     __end_of_main:
   294                           
   295                           	psect	text1
   296  03B8                     __ptext1:	
   297 ;; *************** function _scanningFunc *****************
   298 ;; Defined at:
   299 ;;		line 45 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  m               2    0[BANK0 ] int 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0
   313 ;;      Params:         0       0
   314 ;;      Locals:         0       2
   315 ;;      Temps:          0       0
   316 ;;      Totals:         0       2
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326  03B8                     _scanningFunc:	
   327                           ;psect for function _scanningFunc
   328                           
   329  03B8                     l677:	
   330                           ;incstack = 0
   331                           ; Regs used in _scanningFunc: [wreg-fsr0h+status,2+status,0+btemp+1]
   332                           
   333                           
   334                           ;main.c: 47:         }
   335  03B8  1283               	bcf	3,5	;RP0=0, select bank0
   336  03B9  0199               	clrf	scanningFunc@m
   337  03BA  019A               	clrf	scanningFunc@m+1
   338                           
   339                           ;main.c: 49:         {
   340  03BB  0199               	clrf	scanningFunc@m
   341  03BC  019A               	clrf	scanningFunc@m+1
   342  03BD                     l35:
   343                           
   344                           ;main.c: 50:             RA1 = 1;;main.c: 51:             PORTB = segment[k];
   345  03BD  1283               	bcf	3,5	;RP0=0, select bank0
   346  03BE  1819               	btfsc	scanningFunc@m,0
   347  03BF  2BC1               	goto	u51
   348  03C0  2BC2               	goto	u50
   349  03C1                     u51:
   350  03C1  2BCB               	goto	l37
   351  03C2                     u50:
   352  03C2                     l683:
   353                           
   354                           ;main.c: 52:             RA0 = 0;;main.c: 53:         }
   355  03C2  1405               	bsf	5,0	;volatile
   356  03C3                     l685:
   357                           
   358                           ;main.c: 54:     }
   359  03C3  0818               	movf	_i,w
   360  03C4  3E0C               	addlw	(low (_segment| 0))& (0+255)
   361  03C5  0084               	movwf	4
   362  03C6  1383               	bcf	3,7	;select IRP bank0
   363  03C7  0800               	movf	0,w
   364  03C8  0086               	movwf	6	;volatile
   365  03C9                     l687:
   366                           
   367                           ;main.c: 55: }
   368  03C9  1085               	bcf	5,1	;volatile
   369  03CA  2BD3               	goto	l693
   370  03CB                     l37:
   371  03CB  1485               	bsf	5,1	;volatile
   372  03CC                     l689:
   373  03CC  081C               	movf	_k,w
   374  03CD  3E0C               	addlw	(low (_segment| 0))& (0+255)
   375  03CE  0084               	movwf	4
   376  03CF  1383               	bcf	3,7	;select IRP bank0
   377  03D0  0800               	movf	0,w
   378  03D1  0086               	movwf	6	;volatile
   379  03D2                     l691:
   380  03D2  1005               	bcf	5,0	;volatile
   381  03D3                     l693:
   382  03D3  3001               	movlw	1
   383  03D4  0799               	addwf	scanningFunc@m,f
   384  03D5  1803               	skipnc
   385  03D6  0A9A               	incf	scanningFunc@m+1,f
   386  03D7  3000               	movlw	0
   387  03D8  079A               	addwf	scanningFunc@m+1,f
   388  03D9                     l695:
   389  03D9  081A               	movf	scanningFunc@m+1,w
   390  03DA  3A80               	xorlw	128
   391  03DB  00CF               	movwf	btemp+1
   392  03DC  3087               	movlw	135
   393  03DD  024F               	subwf	btemp+1,w
   394  03DE  1D03               	skipz
   395  03DF  2BE2               	goto	u65
   396  03E0  30D1               	movlw	209
   397  03E1  0219               	subwf	scanningFunc@m,w
   398  03E2                     u65:
   399  03E2  1C03               	skipc
   400  03E3  2BE5               	goto	u61
   401  03E4  2BE6               	goto	u60
   402  03E5                     u61:
   403  03E5  2BBD               	goto	l35
   404  03E6                     u60:
   405  03E6                     l39:
   406  03E6  0008               	return
   407  03E7                     __end_of_scanningFunc:
   408  004E                     btemp	set	78	;btemp
   409  004E                     wtemp0	set	78
   410                           
   411                           	psect	idloc
   412                           
   413                           ;Config register IDLOC0 @ 0x2000
   414                           ;	unspecified, using default values
   415  2000                     	org	8192
   416  2000  3FFF               	dw	16383
   417                           
   418                           ;Config register IDLOC1 @ 0x2001
   419                           ;	unspecified, using default values
   420  2001                     	org	8193
   421  2001  3FFF               	dw	16383
   422                           
   423                           ;Config register IDLOC2 @ 0x2002
   424                           ;	unspecified, using default values
   425  2002                     	org	8194
   426  2002  3FFF               	dw	16383
   427                           
   428                           ;Config register IDLOC3 @ 0x2003
   429                           ;	unspecified, using default values
   430  2003                     	org	8195
   431  2003  3FFF               	dw	16383
   432                           
   433                           	psect	config
   434                           
   435                           ;Config register CONFIG @ 0x2007
   436                           ;	Oscillator Selection bits
   437                           ;	FOSC = XT, XT oscillator
   438                           ;	Watchdog Timer
   439                           ;	WDTE = OFF, WDT disabled
   440                           ;	Power-up Timer Enable bit
   441                           ;	PWRTE = OFF, Power-up Timer is disabled
   442                           ;	Code Protection bit
   443                           ;	CP = OFF, Code protection disabled
   444  2007                     	org	8199
   445  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      3      17

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_scanningFunc

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      69
                                              2 BANK0      1     1      0
                       _scanningFunc
 ---------------------------------------------------------------------------------
 (1) _scanningFunc                                         2     2      0      69
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _scanningFunc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      3      11       3       25.8%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11       6        0.0%
ABS                  0      0      11       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Aug 06 00:44:56 2023

                      _i 0018                        _k 001C                       l30 03B7  
                     l25 0398                       l35 03BD                       l37 03CB  
                     l39 03E6                       u50 03C2                       u51 03C1  
                     u60 03E6                       u61 03E5                       u70 03A0  
                     u71 039F                       u80 03A8                       u65 03E2  
                     u81 03A7                      l711 03AA                      l703 03A1  
                    l705 03A2                      l715 03B0                      l709 03A9  
                    l719 03B5                      l691 03D2                      l683 03C2  
                    l693 03D3                      l685 03C3                      l677 03B8  
                    l695 03D9                      l687 03C9                      l689 03CC  
                    l697 0395                      l699 039A                      _RA0 0028  
                    _RA1 0029                      fsr0 0004                      indf 0000  
                   _main 0395                     _time 0016                     btemp 004E  
                   start 0000                    ?_main 0019                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    status 0003  
                  wtemp0 004E          __initialization 03E7             __end_of_main 03B8  
                 ??_main 001B            scanningFunc@m 0019  __end_of__initialization 03FE  
         __pcstackCOMMON 0000             __pidataBANK0 038B            ?_scanningFunc 0019  
             __pbssBANK0 0016               __pmaintext 0395           ??_scanningFunc 0000  
                __ptext1 03B8                  _segment 000C     end_of_initialization 03FE  
   __end_of_scanningFunc 03E7      start_initialization 03E7              __pdataBANK0 000C  
              ___latbits 0000            __pcstackBANK0 0019                __pnvBANK0 001C  
           _scanningFunc 03B8  
