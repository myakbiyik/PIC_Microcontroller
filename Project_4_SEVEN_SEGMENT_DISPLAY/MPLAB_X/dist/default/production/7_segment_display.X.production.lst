

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Aug 06 00:15:34 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x4E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80                           
    81                           	psect	idataBANK0
    82  0392                     __pidataBANK0:
    83                           
    84                           ;initializer for _segment
    85  0392  343F               	retlw	63
    86  0393  3400               	retlw	0
    87  0394  3406               	retlw	6
    88  0395  3400               	retlw	0
    89  0396  345B               	retlw	91
    90  0397  3400               	retlw	0
    91  0398  344F               	retlw	79
    92  0399  3400               	retlw	0
    93  039A  3466               	retlw	102
    94  039B  3400               	retlw	0
    95  039C  346D               	retlw	109
    96  039D  3400               	retlw	0
    97  039E  347C               	retlw	124
    98  039F  3400               	retlw	0
    99  03A0  3407               	retlw	7
   100  03A1  3400               	retlw	0
   101  03A2  347F               	retlw	127
   102  03A3  3400               	retlw	0
   103  03A4  346F               	retlw	111
   104  03A5  3400               	retlw	0
   105  0006                     _PORTB	set	6
   106  002B                     _RA3	set	43
   107  0085                     _TRISA	set	133
   108  0086                     _TRISB	set	134
   109                           
   110                           	psect	cinit
   111  03D6                     start_initialization:	
   112                           ; #config settings
   113                           
   114  03D6                     __initialization:
   115                           
   116                           ; Initialize objects allocated to BANK0
   117  03D6  2392               	fcall	__pidataBANK0	;fetch initializer
   118  03D7  008C               	movwf	__pdataBANK0& (0+127)
   119  03D8  2393               	fcall	__pidataBANK0+1	;fetch initializer
   120  03D9  008D               	movwf	(__pdataBANK0+1)& (0+127)
   121  03DA  2394               	fcall	__pidataBANK0+2	;fetch initializer
   122  03DB  008E               	movwf	(__pdataBANK0+2)& (0+127)
   123  03DC  2395               	fcall	__pidataBANK0+3	;fetch initializer
   124  03DD  008F               	movwf	(__pdataBANK0+3)& (0+127)
   125  03DE  2396               	fcall	__pidataBANK0+4	;fetch initializer
   126  03DF  0090               	movwf	(__pdataBANK0+4)& (0+127)
   127  03E0  2397               	fcall	__pidataBANK0+5	;fetch initializer
   128  03E1  0091               	movwf	(__pdataBANK0+5)& (0+127)
   129  03E2  2398               	fcall	__pidataBANK0+6	;fetch initializer
   130  03E3  0092               	movwf	(__pdataBANK0+6)& (0+127)
   131  03E4  2399               	fcall	__pidataBANK0+7	;fetch initializer
   132  03E5  0093               	movwf	(__pdataBANK0+7)& (0+127)
   133  03E6  239A               	fcall	__pidataBANK0+8	;fetch initializer
   134  03E7  0094               	movwf	(__pdataBANK0+8)& (0+127)
   135  03E8  239B               	fcall	__pidataBANK0+9	;fetch initializer
   136  03E9  0095               	movwf	(__pdataBANK0+9)& (0+127)
   137  03EA  239C               	fcall	__pidataBANK0+10	;fetch initializer
   138  03EB  0096               	movwf	(__pdataBANK0+10)& (0+127)
   139  03EC  239D               	fcall	__pidataBANK0+11	;fetch initializer
   140  03ED  0097               	movwf	(__pdataBANK0+11)& (0+127)
   141  03EE  239E               	fcall	__pidataBANK0+12	;fetch initializer
   142  03EF  0098               	movwf	(__pdataBANK0+12)& (0+127)
   143  03F0  239F               	fcall	__pidataBANK0+13	;fetch initializer
   144  03F1  0099               	movwf	(__pdataBANK0+13)& (0+127)
   145  03F2  23A0               	fcall	__pidataBANK0+14	;fetch initializer
   146  03F3  009A               	movwf	(__pdataBANK0+14)& (0+127)
   147  03F4  23A1               	fcall	__pidataBANK0+15	;fetch initializer
   148  03F5  009B               	movwf	(__pdataBANK0+15)& (0+127)
   149  03F6  23A2               	fcall	__pidataBANK0+16	;fetch initializer
   150  03F7  009C               	movwf	(__pdataBANK0+16)& (0+127)
   151  03F8  23A3               	fcall	__pidataBANK0+17	;fetch initializer
   152  03F9  009D               	movwf	(__pdataBANK0+17)& (0+127)
   153  03FA  23A4               	fcall	__pidataBANK0+18	;fetch initializer
   154  03FB  009E               	movwf	(__pdataBANK0+18)& (0+127)
   155  03FC  23A5               	fcall	__pidataBANK0+19	;fetch initializer
   156  03FD  009F               	movwf	(__pdataBANK0+19)& (0+127)
   157  03FE                     end_of_initialization:	
   158                           ;End of C runtime variable initialization code
   159                           
   160  03FE                     __end_of__initialization:
   161  03FE  0183               	clrf	3
   162  03FF  2BA6               	ljmp	_main	;jump to C main() function
   163                           
   164                           	psect	dataBANK0
   165  000C                     __pdataBANK0:
   166  000C                     _segment:
   167  000C                     	ds	20
   168                           
   169                           	psect	cstackBANK0
   170  0020                     __pcstackBANK0:
   171  0020                     ?_main:
   172  0020                     ??_main:	
   173                           ; 1 bytes @ 0x0
   174                           
   175                           
   176                           ; 1 bytes @ 0x0
   177  0020                     	ds	3
   178  0023                     main@i:
   179                           
   180                           ; 2 bytes @ 0x3
   181  0023                     	ds	2
   182                           
   183                           	psect	maintext
   184  03A6                     __pmaintext:	
   185 ;;
   186 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   187 ;;
   188 ;; *************** function _main *****************
   189 ;; Defined at:
   190 ;;		line 14 in file "main.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;  i               2    3[BANK0 ] int 
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   199 ;; Tracked objects:
   200 ;;		On entry : B00/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMMON   BANK0
   204 ;;      Params:         0       0
   205 ;;      Locals:         0       2
   206 ;;      Temps:          0       3
   207 ;;      Totals:         0       5
   208 ;;Total ram usage:        5 bytes
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216  03A6                     _main:	
   217                           ;psect for function _main
   218                           
   219  03A6                     l632:	
   220                           ;incstack = 0
   221                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   222                           
   223                           
   224                           ;main.c: 16:             PORTB = segment[i];
   225  03A6  1683               	bsf	3,5	;RP0=1, select bank1
   226  03A7  0186               	clrf	6	;volatile
   227  03A8                     l634:
   228                           
   229                           ;main.c: 17:             _delay((unsigned long)((500)*(4000000/4000.0)));
   230  03A8  301F               	movlw	31
   231  03A9  0085               	movwf	5	;volatile
   232  03AA                     l636:
   233                           
   234                           ;main.c: 18:             i++;
   235  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   236  03AB  01A3               	clrf	main@i
   237  03AC  01A4               	clrf	main@i+1
   238  03AD                     l638:
   239                           
   240                           ;main.c: 21:         if (i==10);main.c: 23:             i=0;
   241  03AD  1D85               	btfss	5,3	;volatile
   242  03AE  2BB0               	goto	u31
   243  03AF  2BB1               	goto	u30
   244  03B0                     u31:
   245  03B0  2BCD               	goto	l646
   246  03B1                     u30:
   247  03B1                     l640:
   248                           
   249                           ;main.c: 24:         };main.c: 25:         }
   250  03B1  0823               	movf	main@i,w
   251  03B2  00A0               	movwf	??_main
   252  03B3  0720               	addwf	??_main,w
   253  03B4  3E0C               	addlw	(low (_segment| 0))& (0+255)
   254  03B5  0084               	movwf	4
   255  03B6  1383               	bcf	3,7	;select IRP bank0
   256  03B7  0800               	movf	0,w
   257  03B8  0086               	movwf	6	;volatile
   258  03B9                     l642:
   259                           
   260                           ;main.c: 26: 
   261  03B9  3003               	movlw	3
   262  03BA  00A2               	movwf	??_main+2
   263  03BB  308A               	movlw	138
   264  03BC  00A1               	movwf	??_main+1
   265  03BD  3055               	movlw	85
   266  03BE  00A0               	movwf	??_main
   267  03BF                     u57:
   268  03BF  0BA0               	decfsz	??_main,f
   269  03C0  2BBF               	goto	u57
   270  03C1  0BA1               	decfsz	??_main+1,f
   271  03C2  2BBF               	goto	u57
   272  03C3  0BA2               	decfsz	??_main+2,f
   273  03C4  2BBF               	goto	u57
   274  03C5  2BC6               	nop2
   275  03C6                     l644:
   276                           
   277                           ;main.c: 27:     return;
   278  03C6  3001               	movlw	1
   279  03C7  1283               	bcf	3,5	;RP0=0, select bank0
   280  03C8  07A3               	addwf	main@i,f
   281  03C9  1803               	skipnc
   282  03CA  0AA4               	incf	main@i+1,f
   283  03CB  3000               	movlw	0
   284  03CC  07A4               	addwf	main@i+1,f
   285  03CD                     l646:
   286  03CD  300A               	movlw	10
   287  03CE  0623               	xorwf	main@i,w
   288  03CF  0424               	iorwf	main@i+1,w
   289  03D0  1D03               	btfss	3,2
   290  03D1  2BD3               	goto	u41
   291  03D2  2BD4               	goto	u40
   292  03D3                     u41:
   293  03D3  2BAD               	goto	l638
   294  03D4                     u40:
   295  03D4  2BAA               	goto	l636
   296  03D5  2800               	ljmp	start
   297  03D6                     __end_of_main:
   298  004E                     btemp	set	78	;btemp
   299  004E                     wtemp0	set	78
   300                           
   301                           	psect	idloc
   302                           
   303                           ;Config register IDLOC0 @ 0x2000
   304                           ;	unspecified, using default values
   305  2000                     	org	8192
   306  2000  3FFF               	dw	16383
   307                           
   308                           ;Config register IDLOC1 @ 0x2001
   309                           ;	unspecified, using default values
   310  2001                     	org	8193
   311  2001  3FFF               	dw	16383
   312                           
   313                           ;Config register IDLOC2 @ 0x2002
   314                           ;	unspecified, using default values
   315  2002                     	org	8194
   316  2002  3FFF               	dw	16383
   317                           
   318                           ;Config register IDLOC3 @ 0x2003
   319                           ;	unspecified, using default values
   320  2003                     	org	8195
   321  2003  3FFF               	dw	16383
   322                           
   323                           	psect	config
   324                           
   325                           ;Config register CONFIG @ 0x2007
   326                           ;	Oscillator Selection bits
   327                           ;	FOSC = XT, XT oscillator
   328                           ;	Watchdog Timer
   329                           ;	WDTE = OFF, WDT disabled
   330                           ;	Power-up Timer Enable bit
   331                           ;	PWRTE = OFF, Power-up Timer is disabled
   332                           ;	Code Protection bit
   333                           ;	CP = OFF, Code protection disabled
   334  2007                     	org	8199
   335  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      5      25

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      47
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      5      19       3       37.9%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19       6        0.0%
ABS                  0      0      19       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Aug 06 00:15:34 2023

                     u30 03B1                       u31 03B0                       u40 03D4  
                     u41 03D3                       u57 03BF                      l640 03B1  
                    l632 03A6                      l642 03B9                      l634 03A8  
                    l644 03C6                      l636 03AA                      l646 03CD  
                    l638 03AD                      _RA3 002B                      fsr0 0004  
                    indf 0000                     _main 03A6                     btemp 004E  
                   start 0000                    ?_main 0020                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    main@i 0023  
                  status 0003                    wtemp0 004E          __initialization 03D6  
           __end_of_main 03D6                   ??_main 0020  __end_of__initialization 03FE  
           __pidataBANK0 0392               __pmaintext 03A6                  _segment 000C  
   end_of_initialization 03FE      start_initialization 03D6              __pdataBANK0 000C  
              ___latbits 0000            __pcstackBANK0 0020  
